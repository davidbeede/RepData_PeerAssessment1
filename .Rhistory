getwd()
library("xlsx")
?version
R.Version()
install.packages("xlsx")
library("xlsx")
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre1.8.0_51')
library("xlsx")
install.packages("rJava")
library("xlsx")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
str(BodyWeight)
?xyplot
xyplot(weight ~ Time | Diet, BodyWeight, groups = Rat)
xyplot(weight ~ Time | Diet, BodyWeight, groups = Rat)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
?trellis.par.set
str(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library("ggplot2")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies, smooth = "loess")
?dtPlt
library(ggplot2)
?dtPlt
?plot
?log10
swirl?
\
?swirl
??swirl
library(swirl)
swirl()
0
install_from_swirl("Statistical Inference")
swirl()
33/36
deck
52
4/52
0
12/52
2/51
0.64
64%
.64
mypdf()
mypdf(x)
mypdf
?integrate
integrate(mypdf, 0, 1.6)
2^0.5
.997*.001
(1-.997)*(1-.001)
(1-.985)*(1-.001)
(.997*.001)/((.997*.001)+((1-.985)*(1-.001)))
3.5
expect_dice()
expect_dice(pmf = 6)
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
0.5*(edh+edl)
integrate(myfunc, 0, 2)
spop
mean(spop)
allsam
apply(allsam, 1, mean)
apply(smeans,1,mean)
mean(smeans)
source('C:/Users/Public/Documents/Dave/JHU_DataScience/Statistical Inference/StatInfProject/StatInfProjPartI.R', echo=TRUE)
source('C:/Users/Public/Documents/Dave/JHU_DataScience/Statistical Inference/StatInfProject/StatInfProjPartI.R', echo=TRUE)
source('C:/Users/Public/Documents/Dave/JHU_DataScience/Statistical Inference/StatInfProject/StatInfProjPartI.R', echo=TRUE)
source('C:/Users/Public/Documents/Dave/JHU_DataScience/Statistical Inference/StatInfProject/StatInfProjPartI.R', echo=TRUE)
source('C:/Users/Public/Documents/Dave/JHU_DataScience/Statistical Inference/StatInfProject/StatInfProjPartI.R', echo=TRUE)
swirl()
library(swirl)
swirl()
myplot(34)
myplot(33.3)
myplot(30)
myplot(28)
z <- qnorm(.95)
pnorm(30+z, mean=30, lower.tail = FALSE)
pnorm(30+z, mean=32, lower.tail = FALSE)
pnorm(30+z, mean=32, sd=1, lower.tail = FALSE)
pnorm(30+z, mean=32, sd=2, lower.tail = FALSE)
pnorm(30+z*2, mean=32, sd=2, lower.tail = FALSE)
power.t.test(n=15, delta = 2/4, sd=1, type = "one.sample", alt = "one.sided")$power
power.t.test(n=16, delta = 2/4, sd=1, type = "one.sample", alt = "one.sided")$power
power.t.test(n=16, delta = 2, sd=4, type = "one.sample", alt = "one.sided")$power
power.t.test(n=16, delta = 100, sd=200, type = "one.sample", alt = "one.sided")$power
power.t.test(power = .8, delta = 2/4, sd=1, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, delta = 2, sd=4, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, delta = 100, sd=200, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, n = 26, sd=1, type = "one.sample", alt = "one.sided")$delta
power.t.test(power = .8, n = 27, sd=1, type = "one.sample", alt = "one.sided")$delta
head(pValues)
sum(pvalues < 0.05)
sum(pValues < 0.05)
sum(p.adjust(pValues, method = "bonferroni") < 50)
sum(p.adjust(pValues, method = "bonferroni") < 0.05)
sum(p.adjust(pValues, method = "BH") < 0.05)
tail(trueStatus)
table(pValues2<0.5, trueStatus)
table(pValues2<0.05, trueStatus)
24/524
24/500
table(p.adjust(pValues2, "bonferroni")<0.05, trueStatus)
table(p.adjust(pValues2, "BH")<0.05, trueStatus)
sum((1:6)/6)
print(g2)
head(sh)
nh
median(resampledMedians)
median(sh)
sample(fh, nh*B, replace = TRUE)
sam <- sample(fh, nh*B, replace = TRUE)
matrix(sam, nrow = B, ncol = nh)
resam <- matrix(sam, nrow = B, ncol = nh)
meds <- apply(resam, 1, median)
median(fh) - median(meds)
sd(meds)
se(resampledMedians)
sd(resampledMedians)/sqrt(nh)
sd(resampledMedians)
quantile(resampledMedians, c(.025, .975))
quantile(meds, c(.025, .975))
dim(InsectSprays)
names(InsectSprays)
range(Bdata$count)
range(Cdata$count)
BCcounts
group
testStat()
testStat
obs <- testStat(BCcounts, group)
obs
mean(Bdata$count - Cdata$count)
sample(group)
perms <- sapply(1:10000, function(i) testStat(BCcounts, sample(group)))
mean(perms > obs)
testStat(DEcounts, group)
perms <- sapply(1:10000, function(i) testStat(DEcounts, sample(group)))
data("mtcars")
meanMPG <- mean(mtcars$mpg)
?qnorm
qnorm(0.95, meanMPG)
meanMPG
mu0 <- meanMPG - qnorm(0.95)*sd(mtcars$mpg)/sqrt(nrow(mtcars))
mu0
mu0 <- meanMPG - qnorm(0.05)*sd(mtcars$mpg)/sqrt(nrow(mtcars))
mu0
mtcars$cyl
cyl4 <- mtcars$cyl[cyl == 4]
cyl4 <- mtcars$cyl[ == 4]
library(dplyr)
cyl4 <- select(mtcars, cyl == 4)
cyl4 <- filter(mtcars, cyl == 4)
cyl1
cyl4
cyl6 <- filter(mtcars, cyl == 6)
?t.test
t.test(mean(cyl4$mpg - cyl6$mpg), paired = FALSE, var.equal = FALSE)
t.test(mean(cyl4$mpg) - mean(cyl6$mpg), paired = FALSE, var.equal = FALSE)
t.test(cyl4$mpg, cyl6$mpg, paired = FALSE, var.equal = FALSE)
t.test(cyl4$mpg, cyl6$mpg, alternative = "two.sided", paired = FALSE, var.equal = FALSE)
pbinom(54, 100, .5, lower.tail = FALSE)
pbinom?
?pbinom
ppois(158, 156, lower.tail = FALSE)
ppois(15800, 15600, lower.tail = FALSE)
ppois(526.67, 520, lower.tail = FALSE)
?ppois
ppois(15800-1, 15600, lower.tail = FALSE)
?pnorm
pnorm(.975, 1, 0.4, lower.tail = FALSE)
?z.test
pnorm(.975, 1, .5657, lower.tail = FALSE)
?pt
pnorm(1/4*sqrt(2/100), lower.tail = FALSE)
pnorm(1/(4*sqrt(2/100)), lower.tail = FALSE)
pnorm(1.767, lower.tail = FALSE)
ts <- 1/(4*sqrt(2/100)
ts <- 1/(4*sqrt(2/100))
ts
2*pnorm(ts)
2*pnorm(-ts)
mu0 <- 10
mua <- 11
sigma = 4
n = 100
z = qnorm(1-.05)
pnorm(mu0 + z*sigma/sqrt(n), mean = mua, sd = sigma/sqrt(n), lower.tail = FALSE)
mu0 <- 0.01
sigma = .04
mu0 <- 0
mua <- 0.01
delta = mua - mu0
power <- 0.8
power.t.test(power, delta, sd = sigma, type = "one.sample", alt = "one.side")$n
power.t.test(power = 0.8, delta = 0.010, sd = .04, type = "one.sample", alt = "one.side")$n
?power.t.test
power.t.test(power = 0.8, delta = 0.010, sd = .04, type = "one.sample", alt = "one.sided")$n
power.t.test(power = 0.8, delta = 0.010, sd = .05, type = "one.sample", alt = "one.sided")$n
qnorm(.2, llower.tail = FALSE)
qnorm(.2, lower.tail = FALSE)
qnorm(.2)
cyl8 <- filter(mtcars, cyl == 8)
t.test(cyl8$mpg, cyl6$mpg, alternative = "two.sided", paired = FALSE, var.equal = TRUE)
t.test(cyl6$mpg, cyl8$mpg, alternative = "two.sided", paired = FALSE, var.equal = TRUE)
sd6 <- sd(cyl6$mpg)
sd8 <- sd(cyl8$mpg)
n6 <- length(cyl6$mpg)
n6
n8 <- length(cyl8$mpg)
varp <- (n6-1)*sd6^2 + (n8-1)*sd8^2/(n6 + n8 - 2)
varp
sep <- sqrt(varp)*((1/n6)+(1/n8))
sep
sqrt(varp)
?t.test
?pt
mean6 <- mean(cyl6)
cyl6
mean6 <- mean(cyl6$mpg)
mean8 <- mean(cyl8$mpg)
sep <- sqrt(varp)*sqrt((1/n6)+(1/n8))
sep
tstat = (mean8 - mean6)/sep
pt(tstat, n8 + n6 - 2, lower.tail = FALSE)
mean8
mean6
tstat = (mean6 - mean8)/sep
pt(tstat, n8 + n6 - 2, lower.tail = FALSE)
pnorm(tstat)
?pnorm
varp <- ((n6-1)*sd6^2 + (n8-1)*sd8^2)/(n6 + n8 - 2)
sep <- sqrt(varp)*sqrt((1/n6)+(1/n8))
sep
sdp <- sqrt(varp)
sdp
zstat <- (mean8 - mean6)/sep
zstat
pz <- 2 * pnorm(-abs(zstat))
pz
baseline <- c(140, 138, 150, 148, 153)
baseline <- c(140, 138, 150, 148, 135)
baseline
week2 <- c(132, 135, 151, 146, 130)
week2
t.test(baseline, week2, paired = TRUE)
1100 + c(-1,1)*qt(.975, 8)*30/sqrt(9)
?pbinom
pbinom(2, size=4, prob =0.5, lower.tail = FALSE)
ppois(9.5,lower.tail = FALSE)
ppois(9,5,lower.tail = FALSE)
ppois(90,50,lower.tail = FALSE)
pnorm(10/1787, 1, 1/sqrt(1787), lower.tail = TRUE)
pnorm(10/1787, 1, 1/sqrt(100), lower.tail = TRUE)
pnorm(10000/1787, 1, 0.1, lower.tail = TRUE)
pnorm(0.55959709009513150531617235590375, 1, 0.1)
pnorm(0.55959709009513150531617235590375, 1, 0.1, lower.tail = TRUE)
pnorm(0.55959709009513150531617235590375, 1, 0.1, lower.tail = FALSE)
pnorm(10, 17.87, sqrt(17.87))
varp = (8*1.5^2 + 8*1.8^2)/16
varp
pnorm(-4/sqrt(varp*2/9))
pt(-4/sqrt(varp*2/9), 16)
qt(.95,8)
23/qt(.95,8)
pt((1078-1100)/(23/qt(95,8)), 8)
pt((1078-1100)/(23/qt(.975,8)), 8)
pt((1078-1100)/(23/qt(.95,8)), 8)
pnorm(10/4 + qnorm(0.95))
pnorm(10/4 + qnorm(0.95), lower.tail = FALSE)
n <- (qnorm(.95) + qnorm(.9)) ^ 2 * .04 ^ 2 / .01^2
n
n <- (qnorm(.95) + qnorm(.8)) ^ 2 * .04 ^ 2 / .01^2
n
setwd(paste("C:/Users/Public/Documents/Dave/JHU_DataScience/",
"ReproducibleResearch/RepData_PeerAssessment1_clone", sep=""))
if (!file.exists("activity.csv")) {
temp <- tempfile()
download.file(paste("https://d396qusza40orc.cloudfront.net/",
"repdata%2Fdata%2Factivity.zip", sep=""), temp)
unzip(temp, files = "activity.csv")
ActMonitor <- read.csv("activity.csv")
} else {
ActMonitor <- read.csv("activity.csv")
}
head(ActMonitor)
str(ActMonitor)
table(ActMonitor$interval)
?mean
?histogram
?hist
?text
?bquote
knit2html()
install.packages("knitr")
install.packages("knitr")
library(knitr)
